<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rob Donnelly</title>
    <link>https://rfdonnelly.github.io/posts/</link>
    <description>Recent content in Posts on Rob Donnelly</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Dec 2020 22:31:27 +0000</lastBuildDate><atom:link href="https://rfdonnelly.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Pageant with VS Code Remote Development</title>
      <link>https://rfdonnelly.github.io/posts/vscode-remote-with-pageant/</link>
      <pubDate>Tue, 01 Dec 2020 22:31:27 +0000</pubDate>
      
      <guid>https://rfdonnelly.github.io/posts/vscode-remote-with-pageant/</guid>
      <description>This article documents using Pageant to manage SSH keys for VS Code Remote.
 Assumptions   VS Code and the VS Code Remote Development extension is installed
  PuTTY Pageant is being used to manage SSH keys
  The remote host has a corresponding public key
     Introduction VS Code Remote Development doesn’t support Pageant out of the box.⁠[1] More specifically, VS Code Remote Development uses the Windows 10 native OpenSSH client and the OpenSSH client doesn’t support Pageant.</description>
    </item>
    
    <item>
      <title>A Word on Patagonia</title>
      <link>https://rfdonnelly.github.io/posts/patagonia/</link>
      <pubDate>Tue, 30 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rfdonnelly.github.io/posts/patagonia/</guid>
      <description>My Houdini, the blue layer pictured in these photos, is no more. After 6 years together our paternship came to a sudden end. I was in disbelief. It wasn’t due to some epic alpine adventure. It was caused by a puppy; a cute, energetic, teething puppy.
  Matthes Crest during a Tenaya-Matthes-Cathedral linkup. Photo: Tami Abdollah 2015-09-05  At less than 4oz and $99 dollars I was initially very unsure about the purchase.</description>
    </item>
    
    <item>
      <title>Using WSL2</title>
      <link>https://rfdonnelly.github.io/posts/wsl2/</link>
      <pubDate>Mon, 03 Feb 2020 22:44:58 +0000</pubDate>
      
      <guid>https://rfdonnelly.github.io/posts/wsl2/</guid>
      <description>Note  2020-11-25 — Added SSH into WSL2.       Note  2020-11-27 — Changed Docker from edge to stable. Simplified Windows Terminal settings.       Note  2020-11-29 — Added workaround for older Docker images.     This article documents the setup of WSL2 for local and remote development. Local development is supported by Docker. For remote development, WSL2 effectively acts as a bridge.</description>
    </item>
    
    <item>
      <title>Using Tree-sitter Parsers in Rust</title>
      <link>https://rfdonnelly.github.io/posts/using-tree-sitter-parsers-in-rust/</link>
      <pubDate>Wed, 07 Aug 2019 11:20:33 -0700</pubDate>
      
      <guid>https://rfdonnelly.github.io/posts/using-tree-sitter-parsers-in-rust/</guid>
      <description>Update: 2019-08-10: Fixed rerun directive in build.rs
Tree-sitter is a parser generator tool and parsing library. It generates portable parsers that can be used in several languages including Rust. Tree-sitter grammars are available for several languages.
This is a game changer because it lowers the barrier to entry for writing language tooling. You no longer need to write your own parser. With Tree-sitter, you can now simply use an existing parser.</description>
    </item>
    
  </channel>
</rss>
